name: 'Run watch'
description: 'Run watch command'
inputs:
  install:
    description: 'If allurectl installation is needed'
    required: false
    default: 'false'
  allure-project-id:
    description: 'Allure project id'
    required: true
  working-directory:
      description: 'Working directory path'
      required: false
      default: ''
  results:
    description: 'Results folder'
    required: true
    default: ''
  command:
    description: 'Command for run tests'
    required: true
    default: 'dotnet test'
  allure-endpoint:
    description: 'Allure endpoint'
    required: true
  allure-token:
    description: 'Allure token '
    required: true
  allurectl-version:
    description: 'Allurectl version'
    required: false
    default: '2.15.1'
runs:
  using: "composite"
  steps:
    - name: Setup Allure TestOps
      if: ${{ inputs.install }}
      uses: allure-framework/setup-allurectl@v1.0.0
      with:
        allure-endpoint: ${{ inputs.allure-endpoint }}
        allure-token: ${{ inputs.allure-token }}
        allure-project-id: ${{ inputs.allure-project-id }}
        allurectl-version: ${{ inputs.allurectl-version}}
    - name: run tests
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: allurectl watch --silent --ignore-passed-test-attachments --results ${{ inputs.results }} -- ${{ inputs.command }}

    - name: show github_output before
      shell: bash
      run: echo "The selected color is ${{ steps.color.outputs.allure_url }}"
      
    - name: set output
      shell: bash
      id: color
      run: |
        echo "allure_url=https:// ${{ matrix.version }}" >> "$GITHUB_OUTPUT"
    - name: show github_output after
      shell: bash
      run: echo "The selected color is ${{ steps.color.outputs.allure_url }}"